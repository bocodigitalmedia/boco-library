// Generated by CoffeeScript 1.6.3
(function() {
  var AbstractPusher, BullPusher,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  AbstractPusher = require('./AbstractPusher');

  module.exports = BullPusher = (function(_super) {
    __extends(BullPusher, _super);

    function BullPusher(props) {
      if (props == null) {
        props = {};
      }
      this.queue = props.queue;
    }

    BullPusher.prototype.push = function(command, callback) {
      var onError, onSuccess;
      onSuccess = function(result) {
        return callback();
      };
      onError = function(error) {
        return callback(error);
      };
      this.queue.add(command).then(onSuccess)["catch"](onError);
      return void 0;
    };

    return BullPusher;

  })(AbstractPusher);

}).call(this);

/*
//@ sourceMappingURL=BullPusher.map
*/
