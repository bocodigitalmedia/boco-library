// Generated by CoffeeScript 1.6.3
(function() {
  var CommandService, InvalidCommand;

  InvalidCommand = require('./InvalidCommand');

  module.exports = CommandService = (function() {
    function CommandService(props) {
      if (props == null) {
        props = {};
      }
      this.pusher = props.pusher;
      this.factory = props.factory;
    }

    CommandService.prototype.execute = function(command, params, callback) {
      var error, validation;
      command.setParameters(params);
      validation = command.validateParameters();
      if (validation.isInvalid()) {
        error = new InvalidCommand();
        error.setPayload({
          validation: validation
        });
        return callback(error);
      }
      return this.pusher.push(command, function(error) {
        if (error != null) {
          return callback(error);
        }
        return callback(void 0, command);
      });
    };

    CommandService.prototype.addItem = function(params, callback) {
      if (params == null) {
        params = {};
      }
      return this.execute(this.factory.addItem(), params, callback);
    };

    return CommandService;

  })();

}).call(this);

/*
//@ sourceMappingURL=CommandService.map
*/
