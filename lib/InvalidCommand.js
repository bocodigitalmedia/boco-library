// Generated by CoffeeScript 1.6.3
(function() {
  var BocoError, InvalidCommand, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BocoError = require('boco-error');

  module.exports = InvalidCommand = (function(_super) {
    __extends(InvalidCommand, _super);

    function InvalidCommand() {
      _ref = InvalidCommand.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    InvalidCommand.prototype.setPayload = function(props) {
      if (props == null) {
        props = {};
      }
      return this.payload = {
        validation: props.validation
      };
    };

    InvalidCommand.prototype.setDefaults = function() {
      if (this.message == null) {
        this.message = 'Invalid command.';
      }
      return InvalidCommand.__super__.setDefaults.call(this);
    };

    return InvalidCommand;

  })(BocoError.CustomError);

}).call(this);

/*
//@ sourceMappingURL=InvalidCommand.map
*/
